EasRegistration.geteasRegMaster=select eas from EasRegistration eas where eas.easMasterRegId=:easMasterRegId
EasRegistration.updateEASStatus=update EasRegistration set masterStatus ='PR' where easMasterRegId=:easMasterRegId 
EasRegistration.updateEasMaster=update EasRegistration set approverCode =:appproverCode, dateModified=trunc(sysdate) ,masterStatus ='PR' where easMasterRegId=:easMasterRegId 
EbdUser.getDealerCodesForSMEInd=select distinct user.dealerCode from EbdUser user where UPPER(user.dealerName) not like '%MAXIS%' and UPPER(user.dealerCode) not like '%EBD%'
EbdUser.getDealerCodesForCorp=select distinct user.dealerCode from EbdUser user where UPPER(user.dealerName) not like '%MAXIS%' and UPPER(user.dealerCode) like '%EBD%'
EbdUser.getDealerCodesForSME=select distinct user.dealerCode from EbdUser user where UPPER(user.dealerName) not like '%MAXIS%'
PortalRegistrationMaster2.getAssignmentListInd=select regMaster from PortalRegistrationMaster2 regMaster where regMaster.regType not in ('PhoneOrder') and  regMaster.regStatus in('PA','P') and regMaster.dealerCode in (:dealerCode) and regMaster.roadShowId is not null and (regMaster.prodCatId is null or regMaster.prodCatId!=1) AND (regMaster.isZerolutionRTF is null or regMaster.isZerolutionRTF='N') order by regMaster.regId desc
PortalRegistrationMaster2.getAssignmentListNormal=select regMaster from PortalRegistrationMaster2 regMaster where regMaster.regType not in ('PhoneOrder') and  regMaster.regStatus='PA' and regMaster.dealerCode in (:dealerCode) and regMaster.roadShowId is null and (regMaster.prodCatId is null or regMaster.prodCatId!=1) AND (regMaster.isZerolutionRTF is null or regMaster.isZerolutionRTF='N') order by regMaster.regId desc
PortalRegistrationMaster2.updateregMasterForEas=update PortalRegistrationMaster2 set bpuApprovedBy=:approverCode, tempApproverCode=:approverCode, regDateApproved=trunc(sysdate), tempDateApproved=trunc(sysdate), regStatus='PR' where easMasterRegId=:easMasterRegId
PortalRegistrationMaster2.updateregMaster=update PortalRegistrationMaster2 set bpuApprovedBy=:approverCode, tempApproverCode=:approverCode, regDateApproved=trunc(sysdate), tempDateApproved=trunc(sysdate), regStatus='PR' where regId=:regId
PortalRegistrationMaster2.updateRegStatusForEas=update PortalRegistrationMaster2 set regStatus='PR' where easMasterRegId=:easMasterRegId
PortalRegistrationMaster2.updateRegStatus=update PortalRegistrationMaster2 set regStatus='PR',regDateApproved=trunc(sysdate) where regId=:regId
PortalRegistrationMaster2.getLineCount=select count(B.TRANS_MSID) from PORTAL_REGISTRATION_MASTER A, PORTAL_TRANS_MSISDN B WHERE A.REG_ID=B.REG_ID and trunc(A.REG_DATE_APPROVED)=trunc(sysdate) and A.BPU_APPROVED_BY=:approverCode and ((B.MSISDN_NO is not null and B.MSISDN_NO not like '%Outright%') or B.MSISDN_NO is null) and A.PRODUCT_GROUP_ID!=6
PortalRegistrationMaster2.getLineCountAppDirect=select count(A.REG_ID) from PORTAL_REGISTRATION_MASTER A WHERE  trunc(A.REG_DATE_APPROVED)=trunc(sysdate) and A.BPU_APPROVED_BY=:approverCode  and A.PRODUCT_GROUP_ID=6
SchAssignment.loadUserList=select u from SchAssignment u where u.dateAssigned=TRUNC(SYSDATE) and u.workStatus='A' and u.availability='A' and u.schCategory like CONCAT('%',CONCAT(:sch_category,'%')) and u.shift in (:shift)
SchIdentifier.loadSchWeek=select distinct(weekNo) from SchIdentifier
SchIdentifier.deletePrevWeek=delete from SchIdentifier
SchIdentifier.loadIdentifierList=SELECT ide from SchIdentifier ide where ide.userId in :userIds
SchIdentifier.insertIdentifier=insert into SCH_IDENTIFIER  values (:userId, :weekNo, :identity, :category)
SchIdentifier.loadIdentifierListForIdentity=select s from SchIdentifier s where s.userId in :userIds and s.sch_category=:category and s.identity=:identity 
SchAssignment.updateSchAssignment=update SchAssignment set workStatus=:workStatus , totalAssigned=:totalAssigned where userId=:userId and schCategory=:schCategory
SchAssignment.isAvailable=select count(*) from SchAssignment where userId=:userId and trunc(dateAssigned)=trunc(sysdate)
SchAssignment.getAMShift=select distinct(AM_SHIFT) from EBD_SCHEDULE_USERS where team=:team
SchAssignment.getPMShift=select distinct(PM_SHIFT) from EBD_SCHEDULE_USERS where team=:team
TransVas.getTransVas=select vas from TransVas vas where vas.regId=:regId
TransVas.getAllTransVas=Select vas from TransVas vas where vas.regId in (Select regMaster.regId from PortalRegistrationMaster2 regMaster where regMaster.easMasterRegId=:easMasterRegId)